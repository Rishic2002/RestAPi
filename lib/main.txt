import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'InfluxDB Query',
      home: HomePage(),
    );
  }
}

class HomePage extends StatelessWidget {
  final headers = {
    'Content-Type': 'application/vnd.flux',
    'Authorization':
        'Bearer IIMIPUCl2QApy9Do8Fkf1wN9TjJc1ylORMgmgSkQesSlgxD3ctdP6_G1odd6wuJfJ9QwBPwSkZff26KRck3CDw=='
  };
  final query = '''from(bucket: "ADARSHARYA")
      |> range(start: -2m)
      |> filter(fn: (r) => r["_measurement"] == "adarsharya")
      |> filter(fn: (r) => r["_field"] == "TankFilledPercent")
      |> filter(fn: (r) => r["TankId"] =~ /^TankBlock/)
      |> group(columns: ["TankId"])
      |> last()
      |> keep(columns: ["_time", "_value", "TankId"])
      ''';

  Future<String?> _getData() async {
    final request = http.Request(
        'POST',
        Uri.parse(
            'http://3.132.136.107:8086/api/v2/query?org=f8c32d91e068f243&bucket=ADARSHARYA'));
    request.body = query;
    request.headers.addAll(headers);
    final response = await request.send();
    if (response.statusCode == 200) {
      return response.stream.bytesToString();
    } else {
      return response.reasonPhrase;
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('InfluxDB Query'),
      ),
      body: FutureBuilder<String?>(
        future: _getData(),
        builder: (context, snapshot) {
          if (snapshot.hasData && snapshot.data != null) {
            return Center(
              child: Text(snapshot.data!),
            );
          } else if (snapshot.hasError) {
            return Center(
              child: Text('Error: ${snapshot.error}'),
            );
          } else {
            return Center(
              child: CircularProgressIndicator(),
            );
          }
        },
      ),
    );
  }
}
